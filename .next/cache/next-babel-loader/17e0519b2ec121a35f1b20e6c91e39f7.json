{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { TextStyle, Page, Layout, EmptyState, FooterHelp, Link, Card, Stack, Heading, Subheading, FormLayout, TextField } from '@shopify/polaris';\nimport { TitleBar, ResourcePicker } from '@shopify/app-bridge-react';\nimport { useState } from 'react';\n\nconst register = () => {\n  const {\n    0: storeName,\n    1: setStoreName\n  } = useState('Nombre de la tienda');\n  const handleChangeStoreName = useCallback(newValue => setValue(newValue), []);\n  const {\n    0: email,\n    1: setEmail\n  } = useState('E-Mail');\n  const handleChangeEmail = useCallback(newValue => setValue(newValue), []);\n  const {\n    0: legalRep,\n    1: setLegalRep\n  } = useState('Nombre del Representante Legal');\n  const handleChangeLegalRep = useCallback(newValue => setValue(newValue), []);\n  const {\n    0: creditCard,\n    1: setCreditCard\n  } = useState('Opcional (Tarjeta De Crédito');\n  const handleChangeCreditCard = useCallback(newValue => setValue(newValue), []);\n  const {\n    0: phone,\n    1: setPhone\n  } = useState('Teléfono');\n  const handleChangePhone = useCallback(newValue => setValue(newValue), []);\n  return __jsx(Page, {\n    fullWidth: true\n  }, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, null, __jsx(Heading, {\n    element: \"h1\"\n  }, \"Registro\")))), __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n    type: \"number\",\n    label: \"Minimum order\",\n    onChange: () => {}\n  }), __jsx(TextField, {\n    type: \"number\",\n    label: \"Maximum order\",\n    onChange: () => {}\n  })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n    type: \"number\",\n    label: \"Minimum order\",\n    onChange: () => {}\n  }), __jsx(TextField, {\n    type: \"number\",\n    label: \"Maximum order\",\n    onChange: () => {}\n  })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n    type: \"text\",\n    label: \"Minimum order\",\n    onChange: () => {}\n  }), __jsx(TextField, {\n    label: \"Maximum order\",\n    onChange: () => {}\n  }))));\n};\n\nexport default register;","map":{"version":3,"sources":["/home/zlayerz/CeroUno/Mes 3/app_shopify/pages/otro-layout.js"],"names":["TextStyle","Page","Layout","EmptyState","FooterHelp","Link","Card","Stack","Heading","Subheading","FormLayout","TextField","TitleBar","ResourcePicker","useState","register","storeName","setStoreName","handleChangeStoreName","useCallback","newValue","setValue","email","setEmail","handleChangeEmail","legalRep","setLegalRep","handleChangeLegalRep","creditCard","setCreditCard","handleChangeCreditCard","phone","setPhone","handleChangePhone"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,UAAlC,EAA8CC,UAA9C,EAA0DC,IAA1D,EAAgEC,IAAhE,EAAsEC,KAAtE,EAA6EC,OAA7E,EAAsFC,UAAtF,EAAkGC,UAAlG,EAA8GC,SAA9G,QAA+H,kBAA/H;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,2BAAzC;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAEnB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BH,QAAQ,CAAC,qBAAD,CAA1C;AACA,QAAMI,qBAAqB,GAAGC,WAAW,CAAEC,QAAD,IAAcC,QAAQ,CAACD,QAAD,CAAvB,EAAmC,EAAnC,CAAzC;AAEA,QAAM;AAAA,OAACE,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,QAAD,CAAlC;AACA,QAAMU,iBAAiB,GAAGL,WAAW,CAAEC,QAAD,IAAcC,QAAQ,CAACD,QAAD,CAAvB,EAAmC,EAAnC,CAArC;AAEA,QAAM;AAAA,OAACK,QAAD;AAAA,OAAWC;AAAX,MAA0BZ,QAAQ,CAAC,gCAAD,CAAxC;AACA,QAAMa,oBAAoB,GAAGR,WAAW,CAAEC,QAAD,IAAcC,QAAQ,CAACD,QAAD,CAAvB,EAAmC,EAAnC,CAAxC;AAEA,QAAM;AAAA,OAACQ,UAAD;AAAA,OAAaC;AAAb,MAA8Bf,QAAQ,CAAC,8BAAD,CAA5C;AACA,QAAMgB,sBAAsB,GAAGX,WAAW,CAAEC,QAAD,IAAcC,QAAQ,CAACD,QAAD,CAAvB,EAAmC,EAAnC,CAA1C;AAEA,QAAM;AAAA,OAACW,KAAD;AAAA,OAAQC;AAAR,MAAoBlB,QAAQ,CAAC,UAAD,CAAlC;AACA,QAAMmB,iBAAiB,GAAGd,WAAW,CAAEC,QAAD,IAAcC,QAAQ,CAACD,QAAD,CAAvB,EAAmC,EAAnC,CAArC;AAEA,SACQ,MAAC,IAAD;AAAM,IAAA,SAAS,EAAE;AAAjB,KACI,MAAC,MAAD,QACI,MAAC,MAAD,CAAQ,OAAR,QACI,MAAC,IAAD,QACQ,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC;AAAjB,gBADR,CADJ,CADJ,CADJ,EAQI,MAAC,UAAD,QACI,MAAC,UAAD,CAAY,KAAZ,QACI,MAAC,SAAD;AAAW,IAAA,IAAI,EAAC,QAAhB;AAAyB,IAAA,KAAK,EAAC,eAA/B;AAA+C,IAAA,QAAQ,EAAE,MAAM,CAAE;AAAjE,IADJ,EAEI,MAAC,SAAD;AAAW,IAAA,IAAI,EAAC,QAAhB;AAAyB,IAAA,KAAK,EAAC,eAA/B;AAA+C,IAAA,QAAQ,EAAE,MAAM,CAAE;AAAjE,IAFJ,CADJ,EAKI,MAAC,UAAD,CAAY,KAAZ,QACI,MAAC,SAAD;AAAW,IAAA,IAAI,EAAC,QAAhB;AAAyB,IAAA,KAAK,EAAC,eAA/B;AAA+C,IAAA,QAAQ,EAAE,MAAM,CAAE;AAAjE,IADJ,EAEI,MAAC,SAAD;AAAW,IAAA,IAAI,EAAC,QAAhB;AAAyB,IAAA,KAAK,EAAC,eAA/B;AAA+C,IAAA,QAAQ,EAAE,MAAM,CAAE;AAAjE,IAFJ,CALJ,EASI,MAAC,UAAD,CAAY,KAAZ,QACI,MAAC,SAAD;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,KAAK,EAAC,eAA7B;AAA6C,IAAA,QAAQ,EAAE,MAAM,CAAE;AAA/D,IADJ,EAEI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,eAAjB;AAAiC,IAAA,QAAQ,EAAE,MAAM,CAAE;AAAnD,IAFJ,CATJ,CARJ,CADR;AA4BH,CA7CD;;AA8CA,eAAeL,QAAf","sourcesContent":["import { TextStyle, Page, Layout, EmptyState, FooterHelp, Link, Card, Stack, Heading, Subheading, FormLayout, TextField } from '@shopify/polaris';\nimport { TitleBar, ResourcePicker } from '@shopify/app-bridge-react';\nimport { useState } from 'react';\n\nconst register = () => {\n\n    const [storeName, setStoreName] = useState('Nombre de la tienda');\n    const handleChangeStoreName = useCallback((newValue) => setValue(newValue), []);\n\n    const [email, setEmail] = useState('E-Mail');\n    const handleChangeEmail = useCallback((newValue) => setValue(newValue), []);\n\n    const [legalRep, setLegalRep] = useState('Nombre del Representante Legal');\n    const handleChangeLegalRep = useCallback((newValue) => setValue(newValue), []);\n\n    const [creditCard, setCreditCard] = useState('Opcional (Tarjeta De Crédito');\n    const handleChangeCreditCard = useCallback((newValue) => setValue(newValue), []);\n\n    const [phone, setPhone] = useState('Teléfono');\n    const handleChangePhone = useCallback((newValue) => setValue(newValue), []);\n\n    return(\n            <Page fullWidth={true}>\n                <Layout>\n                    <Layout.Section>\n                        <Card>\n                                <Heading element=\"h1\">Registro</Heading>\n                        </Card>\n                    </Layout.Section>\n                </Layout>\n                <FormLayout>\n                    <FormLayout.Group>\n                        <TextField type=\"number\" label=\"Minimum order\" onChange={() => {}} />\n                        <TextField type=\"number\" label=\"Maximum order\" onChange={() => {}} />\n                    </FormLayout.Group>\n                    <FormLayout.Group>\n                        <TextField type=\"number\" label=\"Minimum order\" onChange={() => {}} />\n                        <TextField type=\"number\" label=\"Maximum order\" onChange={() => {}} />\n                    </FormLayout.Group>\n                    <FormLayout.Group>\n                        <TextField type=\"text\" label=\"Minimum order\" onChange={() => {}} />\n                        <TextField label=\"Maximum order\" onChange={() => {}} />\n                    </FormLayout.Group>\n                </FormLayout>\n\n\n\n            </Page>\n    );\n};\nexport default register;"]},"metadata":{},"sourceType":"module"}